<?php

error_reporting(E_ALL);
set_time_limit(0);

function sendCommand($socket, string $command, string $data = ''): void
{
    $payload = ($data === '')
        ? ''
        : ' -l ' . strlen($data) . ' -- ' . base64_encode($data);
    $command .= ' -i ' . random_int(1, 999) . $payload . "\x00";
    echo '------------------------------' . PHP_EOL;
    echo 'Send => `' . $command . '`' . ($payload !== '' ? ' (' . $data . ')' : '') . PHP_EOL;
    socket_write($socket, $command, strlen($command));
}

function readSocket($socket): string
{
    $buffer = socket_read($socket, 2048);
    return trim(explode("\x00", $buffer)[1]);
}

function setupCommand($socket, string $command, string $data = ''): void
{
    $output = readSocket($socket);
    $output = preg_replace_callback('/CDATA\[(.*)\]/', function ($matches) {
        if (preg_match('/^[a-zA-Z0-9\/\r\n+]*={0,2}$/', $matches[1])) {
            return 'CDATA[' . base64_decode($matches[1]) . ']';
        }

        return $matches[0];
    }, $output);
    echo '------------------------------' . PHP_EOL;
    echo $output . PHP_EOL;
    sendCommand($socket, $command, $data);
}

$bindAddress = '0.0.0.0';
$bindPort = 9000;

$socketCreate = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
socket_bind($socketCreate, $bindAddress, $bindPort);
socket_listen($socketCreate);

while (true) {
    $socketAccept = socket_accept($socketCreate);

    setupCommand($socketAccept, 'step_into');
    setupCommand($socketAccept, 'step_over');
    setupCommand($socketAccept, 'property_set -n "$_SERVER[\'APP_ENV\']"', 'dev');
    setupCommand($socketAccept, 'property_set -n "$_SERVER[\'DEBUG\']"', '1');
    setupCommand($socketAccept, 'run');

    socket_close($socketAccept);
}

socket_close($socketCreate);